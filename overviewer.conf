worlds["world"] = "/root/minecraft/world"

def playerFilter(poi):
	if poi['id'] == 'Player':
		poi['icon'] = "https://overviewer.org/avatar/%s" % poi['EntityId']
		return "Last known location for %s" % poi['EntityId']

def signFilter(poi):
	if poi['id'] == 'Sign' or poi['id'] == 'minecraft:sign':
		text = "\n".join([poi['Text1'], poi['Text2'], poi['Text3'], poi['Text4']])
		if text.strip(" \n") != "":
			return text;

markers = [
	dict(name="Signs", filterFunction=signFilter, checked=True),
	dict(name="Players", filterFunction=playerFilter, checked=True),
]

renders["overworld-surface"] = {
	"world": "world",
	"title": "Overworld",
	"rendermode": [Base(), Exposed(), EdgeLines(), SmoothLighting(color=True)],
	"markers": markers,
	"imgformat": "jpg",
	"imgquality": 50,
}

renders["overworld-caves"] = {
	"world": "world",
	"title": "Overworld caves",
	"rendermode": [Base(), Exposed(), Cave(only_lit=True), EdgeLines(), SmoothLighting(color=True)],
	"markers": markers,
	"imgformat": "jpg",
	"imgquality": 50,
}

renders['biome-overlay'] = {
	"world": "world",
	"title": "Biome Overlay",
	"rendermode": [ClearBase(), BiomeOverlay()],
	"overlay": ["overworld-surface"],
}

renders["netherworld"] = {
	"world": "world",
	"dimension": "nether",
	"title": "Netherworld",
	"rendermode": [Base(), Exposed(), EdgeLines(), Nether()],
	"markers": markers,
	"imgformat": "jpg",
	"imgquality": 50,
}

outputdir = "/var/www/minecraft"
